// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/currency/add": {
            "post": {
                "description": "Adds a list of currencies to the observed list.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currencies"
                ],
                "summary": "Add Observed Currencies",
                "parameters": [
                    {
                        "description": "Request body with coins to add",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.addCoinsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully added coins",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input or validation error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/currency/price": {
            "get": {
                "description": "Retrieves the price of a specific currency at a given timestamp.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currencies"
                ],
                "summary": "Get Currency Price at Specific Time",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Currency symbol (e.g., BTC)",
                        "name": "coin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Timestamp in Unix format",
                        "name": "timestamp",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Price and timestamp of the requested currency",
                        "schema": {
                            "$ref": "#/definitions/server.coinPriceTimeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input or validation error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/currency/remove": {
            "delete": {
                "description": "Deletes a list of currencies from the observed list.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currencies"
                ],
                "summary": "Delete Observed Currencies",
                "parameters": [
                    {
                        "description": "Request body with coins to delete",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.deleteCoinsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted coins",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input or validation error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/currency/watchlist": {
            "get": {
                "description": "Retrieves a list of all observed currencies.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currencies"
                ],
                "summary": "Get Observed Currencies",
                "responses": {
                    "200": {
                        "description": "List of observed currencies",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "server.addCoinsReq": {
            "type": "object",
            "properties": {
                "coins": {
                    "type": "string"
                }
            }
        },
        "server.coinPriceTimeResponse": {
            "type": "object",
            "properties": {
                "coin": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "server.deleteCoinsReq": {
            "type": "object",
            "properties": {
                "coins": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Crypto_REST_test",
	Description:      "tracking your crypto coins",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
